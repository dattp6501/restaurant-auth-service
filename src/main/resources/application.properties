spring.application.name=authservice
server.port=9000
# ========================================== TIME ZONE =====================
spring.jackson.time-zone=UTC

# ====================================  LOGGING  ===============================
log.host = ${LOG_IP:localhost}
log.port = ${LOG_PORT:9000}
logging.level.com.dattp = ${LOG_LEVEL:info}
logging.level.org.springframework.web = ${LOG_LEVEL:info}
logging.level.org.springframework.data = ${LOG_LEVEL:info}

# ===========================   CONFIG SERVER ===================================
spring.cloud.config.enabled=false
spring.cloud.config.import-check.enabled=false
#spring.config.import = optional:configserver:http://localhost:8888
# ===============================eureka =================================
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# ======================================  kafka =====================================
kafka.test = ${KAFKA_TEST:false}
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVER}
kafka.partition = ${KAFKA_PARTITION:2}
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_TEST_USERNAME}' password='${KAFKA_TEST_PASSWORD}';
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.security.protocol=SASL_SSL

# ====================================== gateway ======================================
jwt.secret = ${JWT_SECRET_KEY}
jwt.expiration-accesstoken = ${JWT_EXPIRATION_ACCESS_TOKEN}
jwt.expiration-refreshtoken = ${JWT_EXPIRATION_REFRESH_TOKEN}
# database
#spring.mvc.hiddenmethod.filter.enabled=true
#spring.datasource.url=jdbc:h2:file:~/data/AUTH_DB
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.driverClassName=org.h2.Driver
#spring.h2.console.enabled=true
#spring.h2.console.settings.web-allow-others=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.show_sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${SHOW_SQL:false}
spring.datasource.hikari.minimum-idle=${MAX_IDLE:3}
spring.datasource.hikari.maximum-pool-size=${MAX_POOL_SIZE:20}
spring.datasource.hikari.idle-timeout=${IDLE_TIMEOUT:15000}
spring.datasource.hikari.max-lifetime=${MAX_LIFE_TIME:180000}
spring.datasource.hikari.connection-timeout=${CONNECT_TIMEOUT:15000}
spring.datasource.hikari.pool-name=HikariCP
# ====================================  zipkin ==============================
# spring.zipkin.base-url=http://localhost:9411/
# spring.zipkin.enabled=true
# spring.zipkin.sender.type = web
# spring.sleuth.enabled = true
# spring.sleuth.sampler.probability = 1.0
# ===================================== REDIS ===============================
# =================================  REDIS  ==========================
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}
spring.redis.username=${REDIS_USERNAME}
spring.redis.password=${REDIS_PASSWORD}
#=================================== TELEGRAM ===========================
telegram.enable_monitor_system=${ENABLE_MONITOR_SYSTEM:true}
telegram.monitor_bot_token = ${MONITOR_BOT_TOKEN}
telegram.monitor_bot_chat_id = ${MONITOR_BOT_CHAT_ID}
# ==================================Enable Swagger UI=======================
springfox.documentation.swagger-ui.enabled=${ENABLE_DOC_API:true}
# ==================================Google authenticator =============
google_authenticator.enable=${GOOGLE_AUTHENTICATOR_ENABLE:false}
google_authenticator.time=${GOOGLE_AUTHENTICATOR_TIME:0}
google_authenticator.application_name=${GOOGLE_AUTHENTICATOR_APP_NAME:dattpmars-restaurant}
domain_name=${DOMAIN_NAME:dattpmars.com}
